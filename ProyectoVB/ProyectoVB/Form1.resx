<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>